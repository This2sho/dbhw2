{"version":3,"sources":["components/Customers_com.js","components/Products_com.js","components/Trades_com.js","components/SpecialSearch.js","ActiveTab.js","App.js","reportWebVitals.js","index.js"],"names":["Customer","props","_addCustomer","e","a","name","document","getElementsByName","value","trim","phone","address","gender","preventDefault","alert","data","axios","method","headers","Headers","window","location","reload","_getCustomer","get","undefined","res","cover","push","setState","list","_searchCustomer","search_customer","state","update","this","className","style","color","onSubmit","type","placeholder","maxLength","border","width","marginLeft","textAlign","display","gridTemplateColumns","length","map","el","key","lineHeight","Component","Product","_addProduct","productID","supplierName","_getProduct","_searchProduct","search_Product","Trade","_addTrade","transactionNumber","price","date","customerName","parseFloat","_getTrade","_searchTrade","search_Trade","step","SpecialSearch","_SearchA","search_A","_SearchB","num","search_B","_SearchC","search_C","console","log","Obj","0","1","2","3","ActiveTab","activeId","clickHandler","id","cursor","textDecorationLine","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97ebb7a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list : [],\r\n      update : false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._getCustomer();\r\n  }\r\n\r\n  _addCustomer = async(e) =>{\r\n    const name = document.getElementsByName('input_name')[0].value.trim();\r\n    const phone = document.getElementsByName('input_phone')[0].value.trim();\r\n    const address = document.getElementsByName('input_address')[0].value.trim();\r\n    const gender = document.getElementsByName('input_gender')[0].value.trim();\r\n    e.preventDefault();\r\n\r\n    if(name === '') {\r\n      alert(\"이름을 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      alert(\"휴대폰 번호를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(address === '') {\r\n      alert(\"주소를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(gender === '') {\r\n      alert(\"성별을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const data = { \r\n      name : name,\r\n      phone : phone,\r\n      address : address,\r\n      gender : gender,\r\n    };\r\n\r\n    const add_customer = await axios('/add/Customer', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data : data\r\n    })\r\n\r\n    if(add_customer.data) {\r\n      alert('고객 데이터를 추가했습니다.');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  _getCustomer = async () => {\r\n      const res = await axios.get('/get/Customer');\r\n  \r\n      if(res.data[0] === undefined) {\r\n        let cover = [];\r\n        cover.push(res.data);\r\n  \r\n        return this.setState({ list : cover })\r\n      }\r\n      this.setState({ list : res.data });\r\n    }\r\n  \r\n    _searchCustomer = async(e) =>{\r\n      \r\n      const name = document.getElementsByName('search_name')[0].value.trim();\r\n      const phone = document.getElementsByName('search_phone')[0].value.trim();\r\n      const address = document.getElementsByName('search_address')[0].value.trim();\r\n      const gender = document.getElementsByName('search_gender')[0].value.trim();\r\n      e.preventDefault();\r\n  \r\n      const data = { \r\n        name : name,\r\n        phone : phone,\r\n        address : address,\r\n        gender : gender};\r\n  \r\n      const search_customer = await axios('/search/Customer', {\r\n        method : 'POST',\r\n        headers: new Headers(),\r\n        data : data\r\n      })\r\n  \r\n      if(search_customer.data[0] === undefined) {\r\n        alert('찾으시는 Customer가 없습니다.');\r\n      }else{\r\n        alert('검색을 완료하였습니다.');\r\n        return this.setState({ list : search_customer.data })\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { list } = this.state;\r\n  \r\n      return(\r\n        <div className='Customer'>\r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Customers Create </h4>\r\n                <form method='POST' onSubmit={this._addCustomer}>\r\n                  <input type='text' placeholder=\"이름을 입력해주세요\" maxLength='20' name='input_name' />\r\n                  <input type='text' placeholder=\"휴대폰번호를 입력해주세요\" maxLength='20' name='input_phone' />\r\n                  <input type='text' placeholder=\"주소를 입력해주세요\" maxLength='30' name='input_address' />\r\n                  <input type='text' placeholder=\"성별을 입력해주세요\" maxLength='10' name='input_gender' />\r\n                  <input type='submit' value='Add' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Customers Search </h4>\r\n                <form method='POST' onSubmit={this._searchCustomer}>\r\n                  <input type='text' placeholder=\"검색할 이름을 입력해주세요\" maxLength='20' name='search_name' />\r\n                  <input type='text' placeholder=\"검색할 휴대폰번호를 입력해주세요\" maxLength='20' name='search_phone' />\r\n                  <input type='text' placeholder=\"검색할 주소를 입력해주세요\" maxLength='30' name='search_address' />\r\n                  <input type='text' placeholder=\"검색할 성별을 입력해주세요\" maxLength='10' name='search_gender' />\r\n                  <input type='submit' value='Search' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br /> <br />\r\n            <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Customers List </h4>\r\n  \r\n                <div style={{ border : 'solid 1px black', width : '80%', marginLeft : '10%', textAlign : 'left' }}>\r\n                  <div style={{ display : 'grid', gridTemplateColumns : '30% 25% 30% 15%', textAlign : 'center' }}>\r\n                    <div> Name </div>\r\n                    <div> Phone </div>\r\n                    <div> Address </div>\r\n                    <div> Gender </div>\r\n                  </div>\r\n                </div>\r\n  \r\n              {list.length !== 0\r\n                ? list.map( (el, key) => {\r\n                  return(\r\n                    <div key={key} style={{ display : 'grid', lineHeight : '60px', gridTemplateColumns : '30% 25% 30% 15%', width : '80%', marginLeft : '10%'}}>\r\n                      <div> {el.name} </div>\r\n                      <div> {el.phone} </div>\r\n                      <div> {el.address} </div>\r\n                      <div> {el.gender} </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              \r\n                : null}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Customer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list : [],\r\n      update : false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._getProduct();\r\n  }\r\n\r\n  _addProduct = async(e) =>{\r\n    const name = document.getElementsByName('input_name')[0].value.trim();\r\n    const productID = document.getElementsByName('input_productID')[0].value.trim();\r\n    const supplierName = document.getElementsByName('input_supplierName')[0].value.trim();\r\n    e.preventDefault();\r\n    if(name === '') {\r\n      alert(\"이름을 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(productID === '') {\r\n      alert(\"상품번호를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(productID === '') {\r\n      alert(\"공급자 이름을 입력해주세요.\");\r\n      return;\r\n    }\r\n    const data = { \r\n      name : name,\r\n      productID : productID,\r\n      supplierName : supplierName\r\n    };\r\n\r\n    const add_Product = await axios('/add/Product', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data : data\r\n    })\r\n\r\n    if(add_Product.data) {\r\n      alert('상품 데이터를 추가했습니다.');\r\n      this._getProduct();\r\n    }\r\n  }\r\n\r\n  _getProduct = async () => {\r\n      const res = await axios.get('/get/Product');\r\n  \r\n      if(res.data[0] === undefined) {\r\n        let cover = [];\r\n        cover.push(res.data);\r\n  \r\n        return this.setState({ list : cover })\r\n      }\r\n      this.setState({ list : res.data });\r\n    }\r\n  \r\n    _searchProduct = async(e) =>{\r\n      \r\n      const name = document.getElementsByName('search_name')[0].value.trim();\r\n      const productID = document.getElementsByName('search_productID')[0].value.trim();\r\n      const supplierName = document.getElementsByName('search_supplierName')[0].value.trim();\r\n      e.preventDefault();\r\n  \r\n      const data = { \r\n        name : name,\r\n        productID : productID,\r\n        supplierName : supplierName};\r\n  \r\n      const search_Product = await axios('/search/Product', {\r\n        method : 'POST',\r\n        headers: new Headers(),\r\n        data : data\r\n      })\r\n  \r\n      if(search_Product.data[0] === undefined) {\r\n        alert('찾으시는 Product가 없습니다.');\r\n      }else{\r\n        alert('검색을 완료하였습니다.');\r\n        return this.setState({ list : search_Product.data })\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { list } = this.state;\r\n  \r\n      return(\r\n        <div className='Product'>\r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Products Create </h4>\r\n                <form method='POST' onSubmit={this._addProduct}>\r\n                  <input type='text' placeholder=\"상품 이름을 입력해주세요\" maxLength='20' name='input_name' />\r\n                  <input type='text' placeholder=\"상품 번호를 입력해주세요\" maxLength='20' name='input_productID' />\r\n                  <input type='text' placeholder=\"공급자 이름을 입력해주세요\" maxLength='30' name='input_supplierName' />\r\n                  <input type='submit' value='Add' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Products Search </h4>\r\n                <form method='POST' onSubmit={this._searchProduct}>\r\n                  <input type='text' placeholder=\"검색할 상품 이름을 입력해주세요\" maxLength='20' name='search_name' />\r\n                  <input type='text' placeholder=\"검색할 상품 번호를 입력해주세요\" maxLength='20' name='search_productID' />\r\n                  <input type='text' placeholder=\"검색할 공급자 이름을 입력해주세요\" maxLength='30' name='search_supplierName' />\r\n                  <input type='submit' value='Search' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br /> <br />\r\n            <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Products List </h4>\r\n  \r\n                <div style={{ border : 'solid 1px black', width : '80%', marginLeft : '16%', textAlign : 'left' }}>\r\n                  <div style={{ display : 'grid', gridTemplateColumns : '25% 35% 28%', textAlign : 'center' }}>\r\n                    <div> Name </div>\r\n                    <div> ProductID </div>\r\n                    <div> SupplierName </div>\r\n                  </div>\r\n                </div>\r\n  \r\n              {list.length !== 0\r\n                ? list.map( (el, key) => {\r\n                  return(\r\n                    <div key={key} style={{ display : 'grid', lineHeight : '60px', gridTemplateColumns : '25% 35% 28%', width : '80%', marginLeft : '16%'}}>\r\n                      <div> {el.name} </div>\r\n                      <div> {el.productID} </div>\r\n                      <div> {el.supplierName} </div>\r\n                    </div>\r\n                  )\r\n                })\r\n                : null}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Trade extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list : [],\r\n      update : false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._getTrade();\r\n  }\r\n\r\n  _addTrade = async(e) =>{\r\n    const transactionNumber = document.getElementsByName('input_transactionNumber')[0].value.trim();\r\n    const productID = document.getElementsByName('input_productID')[0].value.trim();\r\n    const price = document.getElementsByName('input_price')[0].value.trim() * 1;\r\n    const date = document.getElementsByName('input_date')[0].value.trim();\r\n    const customerName = document.getElementsByName('input_customerName')[0].value.trim();\r\n    e.preventDefault();\r\n\r\n    if(transactionNumber === '') {\r\n      alert(\"거래번호를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(productID === '') {\r\n      alert(\"상품 번호를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(price === '') {\r\n      alert(\"가격을 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(date === '') {\r\n      alert(\"날짜를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(customerName === '') {\r\n      alert(\"고객이름을 입력해주세요.\");\r\n      return;\r\n    }\r\n    const data = { \r\n      transactionNumber : transactionNumber,\r\n      productID : productID,\r\n      price : parseFloat(price),\r\n      date : date,\r\n      customerName : customerName\r\n    };\r\n\r\n    const add_Trade = await axios('/add/Trade', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data : data\r\n    })\r\n\r\n    if(add_Trade.data) {\r\n      alert('거래 데이터를 추가했습니다.');\r\n      this._getTrade();\r\n    }\r\n  }\r\n\r\n  _getTrade = async () => {\r\n      const res = await axios.get('/get/Trade');\r\n  \r\n      if(res.data[0] === undefined) {\r\n        let cover = [];\r\n        cover.push(res.data);\r\n  \r\n        return this.setState({ list : cover })\r\n      }\r\n      this.setState({ list : res.data });\r\n    }\r\n  \r\n    _searchTrade = async(e) =>{\r\n      \r\n      const transactionNumber = document.getElementsByName('search_transactionNumber')[0].value.trim();\r\n      const productID = document.getElementsByName('search_productID')[0].value.trim();\r\n      const price = document.getElementsByName('search_price')[0].value.trim() * 1;\r\n      const date = document.getElementsByName('search_date')[0].value.trim();\r\n      const customerName = document.getElementsByName('search_customerName')[0].value.trim();\r\n      \r\n      e.preventDefault();\r\n      const data = { \r\n        transactionNumber : transactionNumber,\r\n        productID : productID,\r\n        price : price,\r\n        date : date,\r\n        customerName : customerName};\r\n  \r\n      const search_Trade = await axios('/search/Trade', {\r\n        method : 'POST',\r\n        headers: new Headers(),\r\n        data : data\r\n      })\r\n  \r\n      if(search_Trade.data[0] === undefined) {\r\n        alert('찾으시는 Trade가 없습니다.');\r\n      }else{\r\n        alert('검색을 완료하였습니다.');\r\n        return this.setState({ list : search_Trade.data })\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { list } = this.state;\r\n  \r\n      return(\r\n        <div className='Trade'>\r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Trades Create </h4>\r\n                <form method='POST' onSubmit={this._addTrade}>\r\n                  <input type='text' placeholder=\"거래번호를 입력해주세요\" maxLength='20' name='input_transactionNumber' />\r\n                  <input type='text' placeholder=\"상품번호를 입력해주세요\" maxLength='20' name='input_productID' />\r\n                  <input type='number' step='0.0001' placeholder=\"가격을 입력해주세요\" maxLength='20' name='input_price' />\r\n                  <input type='date' maxLength='15' name='input_date' />\r\n                  <input type='text' placeholder=\"고객이름을 입력해주세요\" maxLength='20' name='input_customerName' />\r\n                  <input type='submit' value='Add' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br />\r\n          <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Trades Search </h4>\r\n                <form method='POST' onSubmit={this._searchTrade}>\r\n                  <input type='text' placeholder=\"검색할 거래번호를 입력해주세요\" maxLength='20' name='search_transactionNumber' />\r\n                  <input type='text' placeholder=\"검색할 상품번호를 입력해주세요\" maxLength='20' name='search_productID' />\r\n                  <input type='number' step='0.0001' placeholder=\"검색할 가격을 입력해주세요\" maxLength='20' name='search_price' />\r\n                  <input type='date' maxLength='15' name='search_date' />\r\n                  <input type='text' placeholder=\"검색할 고객이름을 입력해주세요\" maxLength='20' name='search_customerName' />\r\n                  <input type='submit' value='Search' />\r\n                </form>\r\n          </div>\r\n  \r\n          <br /> <br />\r\n            <div>\r\n              <h4 style={{ color : '#6E6E6E'}}> Trades List </h4>\r\n  \r\n                <div style={{ border : 'solid 1px black', width : '90%', marginLeft : '7%', textAlign : 'left' }}>\r\n                  <div style={{ display : 'grid', gridTemplateColumns : '20% 20% 15% 20% 25%', textAlign : 'center' }}>\r\n                    <div> TransactionNumber </div>\r\n                    <div> ProductID </div>\r\n                    <div> Price </div>\r\n                    <div> Date </div>\r\n                    <div> CustomerName </div>\r\n                  </div>\r\n                </div>\r\n  \r\n              {list.length !== 0\r\n                ? list.map( (el, key) => {\r\n                  return(\r\n                    <div key={key} style={{ display : 'grid', lineHeight : '60px', gridTemplateColumns : '20% 20% 15% 20% 25%', width : '90%', marginLeft : '7%'}}>\r\n                      <div> {el.transactionNumber} </div>\r\n                      <div> {el.productID} </div>\r\n                      <div> {el.price} </div>\r\n                      <div> {el.date} </div>\r\n                      <div> {el.customerName} </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              \r\n                : null}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Trade;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SpecialSearch extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      list : [],\r\n      update : false,\r\n    }\r\n  }\r\n\r\n  _SearchA = async (e) => {\r\n    e.preventDefault();\r\n    const name =\"\";\r\n    const productID =\"\";\r\n    const supplierName =\"\";\r\n    const data ={\r\n      name : name,\r\n      productID : productID,\r\n      supplierName : supplierName\r\n    };\r\n    const search_A = await axios('/search/A', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data: data\r\n    })\r\n\r\n    if(search_A.data[0] === undefined) {\r\n      alert('찾으시는 데이터가 없습니다.');\r\n    }else{\r\n      alert('검색을 완료하였습니다.');\r\n      return this.setState({ list : search_A.data[0] })\r\n    }\r\n  }\r\n\r\n  _SearchB = async (e) => {\r\n    e.preventDefault();\r\n    const date = document.getElementsByName('search_date')[0].value.trim();\r\n    const num = document.getElementsByName('search_num')[0].value.trim();\r\n    if(date===''){\r\n      alert(\"날짜를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(num===''){\r\n      alert(\"원하는 개수를 입력해주세요.\");\r\n      return;\r\n    }\r\n    const data ={\r\n      num : num,\r\n      date : date\r\n    };\r\n    const search_B = await axios('/search/B', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data: data\r\n    })\r\n    if(search_B.data[0] === undefined) {\r\n      alert('찾으시는 데이터가 없습니다.');\r\n    }else{\r\n      alert('검색을 완료하였습니다.');\r\n      return this.setState({ list : search_B.data[0] })\r\n    }\r\n  }\r\n\r\n  _SearchC = async (e) => {\r\n    e.preventDefault();\r\n    const num = document.getElementsByName('search_count')[0].value.trim();\r\n    if(num===''){\r\n      alert(\"원하는 횟수를 입력해주세요.\");\r\n      return;\r\n    }\r\n    const data ={\r\n      num : num\r\n    };\r\n    const search_C = await axios('/search/C', {\r\n      method : 'POST',\r\n      headers: new Headers(),\r\n      data: data\r\n    })\r\n    if(search_C.data[0] === undefined) {\r\n      alert('찾으시는 데이터가 없습니다.');\r\n    }else{\r\n      alert('검색을 완료하였습니다.');\r\n      console.log(search_C.data)\r\n      return this.setState({ list : search_C.data[0] })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { list } = this.state;\r\n    return(\r\n      <div className='SpecialSearch'>\r\n        <br />\r\n        <div className='A'>\r\n          <form method='POST' onSubmit={this._SearchA}>\r\n            <h4 style={{ color : '#6E6E6E'}}>A.\t남자보다 여자가 많이 산 상품의 이름&nbsp;&nbsp;\r\n            <input type='submit' value='SearchA'/></h4>\r\n          </form>\r\n            <h4 style={{ color : '#6E6E6E'}}>B. 주어진 날 이전에 가장 많은 거래(금액기준)가 이루어진 k가지 상품</h4> \r\n              <form method='POST' onSubmit={this._SearchB}>\r\n                <input type='date' maxLength='15' name='search_date' />\r\n                &nbsp;&nbsp;\r\n                <input type='number' placeholder=\"원하는 개수(k)를 입력하세요.\" maxLength='10' name='search_num' />\r\n                &nbsp;&nbsp;\r\n                <input type='submit' value='SearchB'/>\r\n              </form> \r\n              <h4 style={{ color : '#6E6E6E'}}>C. 하나의 supplier에서 m 번 이상의 제품을 산 고객의 이름</h4> \r\n              <form method='POST' onSubmit={this._SearchC}>\r\n                <input type='number' placeholder=\"횟수(m)을 입력하세요.\" maxLength='10' name='search_count' />\r\n                &nbsp;&nbsp;\r\n                <input type='submit' value='SearchC'/>\r\n              </form>\r\n              <br /> <br />\r\n              <div>\r\n                <h4 style={{ color : '#6E6E6E'}}> Special Search List </h4>\r\n              </div>  \r\n        </div>\r\n        <div> \r\n            <div > \r\n              <div style={{ border : 'solid 1px black', width : '80%', marginLeft : '16%', textAlign : 'left' }}>\r\n                <div style={{ display : 'grid', gridTemplateColumns : '25% 35% 28%', textAlign : 'center' }}>\r\n                  <div> Name </div>\r\n                  <div> ProductID or Count </div>\r\n                  <div> SupplierName </div>\r\n                </div>\r\n              </div>\r\n\r\n              {list.length !== 0\r\n                ? list.map( (el, key) => {\r\n                  return(\r\n                    <div key={key} style={{ display : 'grid', lineHeight : '60px', gridTemplateColumns : '25% 35% 28%', width : '80%', marginLeft : '16%'}}>\r\n                      <div> {el.name} {el.customerName}</div>\r\n                      <div> {el.productID} {el['count(customerName)']}</div>\r\n                      <div> {el.supplierName} </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              : null}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n \r\n}\r\n\r\nexport default SpecialSearch;","import React, { Component} from 'react';\r\nimport Customers_Com from \"./components/Customers_com\";\r\nimport Products_Com from \"./components/Products_com\";\r\nimport Trades_Com from \"./components/Trades_com\";\r\nimport SpecialSearch from \"./components/SpecialSearch\";\r\n\r\nconst Obj = {\r\n  0: <Customers_Com />,\r\n  1: <Products_Com />,\r\n  2: <Trades_Com />,\r\n  3: <SpecialSearch />,\r\n};\r\n\r\nexport default class ActiveTab extends Component {\r\n  state = {\r\n    activeId: 0,\r\n  };\r\n\r\n  \r\n\r\n  clickHandler = (id) => {\r\n    this.setState({ activeId: id });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <wrapper>\r\n        <div style={{ border : 'solid 1px black', width : '100%', textAlign : 'center' }}>\r\n          <div style={{ display : 'grid', gridTemplateColumns : '25% 25% 25% 25%', textAlign : 'center' , color : '#0B3861',cursor:'pointer', textDecorationLine: 'underline' }}>\r\n            <div style={{ border : 'solid 1px black', width : '100%', textAlign : 'center' }}>\r\n              <div className=\"Customer_Tab\" onClick={() => this.clickHandler(0)}><h4>Customers</h4></div>\r\n            </div>\r\n            <div style={{ border : 'solid 1px black', width : '100%', textAlign : 'center' }}>\r\n              <div className=\"Products_Tab\"onClick={() => this.clickHandler(1)}><h4>Products</h4></div>\r\n            </div>\r\n            <div style={{ border : 'solid 1px black', width : '100%', textAlign : 'center' }}>\r\n              <div className=\"Trades_Tab\"onClick={() => this.clickHandler(2)}><h4>Trades</h4></div>\r\n            </div>\r\n            <div style={{ border : 'solid 1px black', width : '100%', textAlign : 'center' }}>\r\n              <div className=\"SpecialSearch_Tab\"onClick={() => this.clickHandler(3)}><h4>SpecialSearch</h4></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"contents\">{Obj[this.state.activeId]}</div>\r\n      </wrapper>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component} from 'react';\nimport './App.css';\nimport ActiveTab from \"./ActiveTab\";\n\n\nclass App extends Component {\n  render() {\n    return(\n      <div className='App' style={{textAlign:'center'}}>\n        <h3> 데이터 베이스 과제 2 </h3>\n        <h4> 201624535 이건호</h4>\n        <h4> 아래의 원하는 메뉴를 눌러주세요</h4>\n        <ActiveTab/>\n        </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}